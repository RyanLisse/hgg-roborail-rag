# Railway Production Environment Configuration
# This file contains the production environment variables for Railway deployment
# Copy these variables to your Railway project's environment variables section

# ==========================================
# Core Application Configuration
# ==========================================
NODE_ENV=production
PORT=3000

# Generate a secure random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=GENERATE_SECURE_RANDOM_SECRET_HERE

# ==========================================
# Railway PostgreSQL Database Configuration
# ==========================================
# Railway automatically provides these variables in production
# The DATABASE_URL is the primary connection string used by the application
DATABASE_URL=${{Postgres.DATABASE_URL}}

# Fallback PostgreSQL URL (maps to DATABASE_URL for compatibility)
POSTGRES_URL=${{Postgres.DATABASE_URL}}

# Individual PostgreSQL connection components (automatically provided by Railway)
PGHOST=${{Postgres.PGHOST}}
PGPORT=${{Postgres.PGPORT}}
PGUSER=${{Postgres.PGUSER}}
PGPASSWORD=${{Postgres.PGPASSWORD}}
PGDATABASE=${{Postgres.PGDATABASE}}

# ==========================================
# Railway Platform Configuration
# ==========================================
# These are automatically set by Railway in production
RAILWAY_ENVIRONMENT=${{RAILWAY_ENVIRONMENT}}
RAILWAY_PROJECT_ID=${{RAILWAY_PROJECT_ID}}
RAILWAY_SERVICE_ID=${{RAILWAY_SERVICE_ID}}
RAILWAY_DEPLOYMENT_ID=${{RAILWAY_DEPLOYMENT_ID}}
RAILWAY_REPLICA_ID=${{RAILWAY_REPLICA_ID}}

# ==========================================
# AI Provider Configuration (REQUIRED)
# ==========================================
# At least one AI provider API key is required for the application to function

# Primary AI Provider - OpenAI (recommended)
OPENAI_API_KEY=your-openai-api-key-here

# Alternative AI Providers (optional)
# ANTHROPIC_API_KEY=your-anthropic-api-key
# GOOGLE_GENERATIVE_AI_API_KEY=your-google-ai-key
# XAI_API_KEY=your-xai-api-key
# GROQ_API_KEY=your-groq-api-key

# ==========================================
# Vector Store & Embeddings Configuration
# ==========================================
# Required for vector search functionality
COHERE_API_KEY=your-cohere-api-key-here

# OpenAI Vector Store ID (optional, for OpenAI Assistant integration)
# OPENAI_VECTORSTORE=vs_your_vector_store_id

# ==========================================
# File Storage Configuration
# ==========================================
# Vercel Blob Storage for file uploads
BLOB_READ_WRITE_TOKEN=your-vercel-blob-token-here

# ==========================================
# Redis Configuration (Optional)
# ==========================================
# For caching and session management
REDIS_URL=${{Redis.REDIS_URL}}

# ==========================================
# Smart-Spawn Database Optimization
# ==========================================
# Optimized connection settings for Railway PostgreSQL
SMART_SPAWN_DB_MAX_CONNECTIONS=20
SMART_SPAWN_DB_CONNECTION_TIMEOUT=30000
SMART_SPAWN_DB_RETRY_ATTEMPTS=3
SMART_SPAWN_DB_RETRY_DELAY=2000
SMART_SPAWN_FALLBACK_MODE=graceful
SMART_SPAWN_TEST_MODE=false

# ==========================================
# Observability & Monitoring (Optional)
# ==========================================
# LangSmith for AI observability and tracing
# LANGSMITH_TRACING=true
# LANGSMITH_API_KEY=your-langsmith-api-key
# LANGSMITH_PROJECT=railway-production
# LANGSMITH_BASE_URL=https://api.smith.langchain.com

# ==========================================
# Performance & Security Configuration
# ==========================================
# Application timeout settings
AGENT_TIMEOUT=300000

# Debug mode (should be false in production)
DEBUG=false

# ==========================================
# Health Check Configuration
# ==========================================
# Railway health check endpoint configuration
HEALTHCHECK_PATH=/api/health
HEALTHCHECK_TIMEOUT=30

# ==========================================
# Deployment Configuration
# ==========================================
# Build and deployment settings
BUILD_COMMAND=pnpm run build:railway
START_COMMAND=pnpm start

# Railway-specific build optimizations
RAILWAY_BUILD_CACHE=true
RAILWAY_DOCKERFILE_PATH=Dockerfile

# ==========================================
# Environment-Specific Settings
# ==========================================
# Production-specific configurations
NEXT_TELEMETRY_DISABLED=1
ANALYZE_BUNDLE=false

# ==========================================
# Security Headers & CORS Configuration
# ==========================================
# Add your production domain here
ALLOWED_ORIGINS=https://your-production-domain.railway.app

# ==========================================
# Backup & Recovery Configuration
# ==========================================
# Database backup settings (handled by Railway)
RAILWAY_BACKUP_ENABLED=true
RAILWAY_BACKUP_RETENTION=7d

# ==========================================
# Logging Configuration
# ==========================================
# Structured logging for production
LOG_LEVEL=info
LOG_FORMAT=json

# ==========================================
# Feature Flags (Optional)
# ==========================================
# Enable/disable specific features in production
FEATURE_VECTOR_SEARCH=true
FEATURE_FILE_UPLOADS=true
FEATURE_ANALYTICS=true

# ==========================================
# Third-Party Integrations (Optional)
# ==========================================
# Add your production integrations here
# VERCEL_ANALYTICS_ID=your-analytics-id
# SENTRY_DSN=your-sentry-dsn
# MIXPANEL_TOKEN=your-mixpanel-token

# ==========================================
# IMPORTANT NOTES
# ==========================================
# 1. Replace all placeholder values with your actual production values
# 2. Never commit actual secrets to version control
# 3. Use Railway's environment variable dashboard to set these values
# 4. Test the configuration in Railway's staging environment first
# 5. Monitor logs and health checks after deployment
# 6. The DATABASE_URL format should be: postgresql://user:password@host:port/dbname
# 7. Ensure all required API keys are valid and have sufficient quotas
# 8. Railway automatically handles SSL/TLS for database connections